/**
 * Generated by: Raymond Truong
 * Date: 2025/07/22
 */

#pragma once
#include <string>
#include <memory>
#include <utility>
#include <iostream>

using namespace std;

namespace myapp {
    // Pizza product class
    class Pizza {
    private:
        string size_;
        bool has_egg_;
        bool has_cheese_;
        bool has_bacon_;
        bool has_fish_;
        bool has_vegetable_;

    public:
        explicit Pizza(string  size)
            : size_(move(size)), has_egg_(false), has_cheese_(false),
              has_bacon_(false), has_fish_(false), has_vegetable_(false) {}

        // Setters for add-ons
        void set_egg(const bool has_egg) { has_egg_ = has_egg; }
        void set_cheese(const bool has_cheese) { has_cheese_ = has_cheese; }
        void set_bacon(const bool has_bacon) { has_bacon_ = has_bacon; }
        void set_fish(const bool has_fish) { has_fish_ = has_fish; }
        void set_vegetable(const bool has_vegetable) { has_vegetable_ = has_vegetable; }

        // Getters
        const string& get_size() const { return size_; }
        bool has_egg() const { return has_egg_; }
        bool has_cheese() const { return has_cheese_; }
        bool has_bacon() const { return has_bacon_; }
        bool has_fish() const { return has_fish_; }
        bool has_vegetable() const { return has_vegetable_; }

        void display() const;
    };

    // Pizza Builder implement
    class PizzaBuilder {
    private:
        unique_ptr<Pizza> pizza_;

    public:
        explicit PizzaBuilder(const string& size) : pizza_(make_unique<Pizza>(size)) {}
        ~PizzaBuilder() = default;

        // Builder methods for add-ons
        PizzaBuilder& add_egg() {
            pizza_->set_egg(true);
            return *this;
        }

        PizzaBuilder& add_cheese() {
            pizza_->set_cheese(true);
            return *this;
        }

        PizzaBuilder& add_bacon() {
            pizza_->set_bacon(true);
            return *this;
        }

        PizzaBuilder& add_fish() {
            pizza_->set_fish(true);
            return *this;
        }

        PizzaBuilder& add_vegetable() {
            pizza_->set_vegetable(true);
            return *this;
        }

        // Build method
        unique_ptr<Pizza> build() {
            return move(pizza_);
        }
    };

} // namespace myapp
