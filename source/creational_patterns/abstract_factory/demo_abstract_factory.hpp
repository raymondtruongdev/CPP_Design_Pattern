/**
 * Generated by: Raymond Truong
 * Date: 2025/08/07
 */
#pragma once

#include <memory>
#include "abstract_factory.hpp"
#include "logger.hpp"

namespace myapp {
    using namespace  std;

    inline void order_chair_from_factory(ChairFactory& factory) {
        const auto chair = factory.create_chair();
        const auto shipment = factory.create_shipment();

        chair->make_chair();    // product usage in client
        shipment->ship();       // product usage in client
    }

    inline void demo_abstract_factory() {
        LOG_INFO("============ Demo Abstract Factory Design Pattern ===========");
        HighEndChairFactory high_end_factory;
        NormalChairFactory normal_factory;

        std::cout << "--- High-End Order ---" << std::endl;
        order_chair_from_factory(high_end_factory);

        std::cout << "\n--- Normal Order ---" << std::endl;
        order_chair_from_factory(normal_factory);
    }

}